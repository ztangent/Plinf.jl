;; ASCII ;;
; W: wall, D: door, k: key, g: gem, G: goal-gem, s: start, .: empty
; g..W...g
; k..D.Wk.
; .WWWWWWD
; .W..D.W.
; .W..W.W.
; ....W.W.
; WWW.W.W.
; s...W..G
(define (problem doors-keys-gems-3)
  (:domain doors-keys-gems)
  (:objects door1 door2 door3 - door key1 key2 - key gem1 gem2 gem3 - gem)
  (:init (= (walls) (new-bit-matrix false 8 8))
         (= (xloc gem1) (1))
         (= (yloc gem1) (1))
         (= (walls) (set-index walls true 1 4))
         (= (xloc gem2) (8))
         (= (yloc gem2) (1))
         (= (xloc key1) (1))
         (= (yloc key1) (2))
         (= (xloc door1) (4))
         (= (yloc door1) (2))
         (locked door1)
         (= (walls) (set-index walls true 2 6))
         (= (xloc key2) (7))
         (= (yloc key2) (2))
         (= (walls) (set-index walls true 3 2))
         (= (walls) (set-index walls true 3 3))
         (= (walls) (set-index walls true 3 4))
         (= (walls) (set-index walls true 3 5))
         (= (walls) (set-index walls true 3 6))
         (= (walls) (set-index walls true 3 7))
         (= (xloc door2) (8))
         (= (yloc door2) (3))
         (locked door2)
         (= (walls) (set-index walls true 4 2))
         (= (xloc door3) (5))
         (= (yloc door3) (4))
         (locked door3)
         (= (walls) (set-index walls true 4 7))
         (= (walls) (set-index walls true 5 2))
         (= (walls) (set-index walls true 5 5))
         (= (walls) (set-index walls true 5 7))
         (= (walls) (set-index walls true 6 5))
         (= (walls) (set-index walls true 6 7))
         (= (walls) (set-index walls true 7 1))
         (= (walls) (set-index walls true 7 2))
         (= (walls) (set-index walls true 7 3))
         (= (walls) (set-index walls true 7 5))
         (= (walls) (set-index walls true 7 7))
         (= (walls) (set-index walls true 8 5))
         (= (xloc gem3) (8))
         (= (yloc gem3) (8))
         (= (xpos) (1))
         (= (ypos) (8)))
  (:goal (has gem3))
)
